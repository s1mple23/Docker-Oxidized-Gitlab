#!/bin/bash
# config.env - Complete Infrastructure Configuration
# Version: 1.0 - All settings in one place

# ============================================================================
# ORGANIZATION SETTINGS
# ============================================================================
ORG_NAME="ORGNAME"
DOMAIN="example.com"

# ============================================================================
# INSTALLATION OPTIONS
# ============================================================================
INSTALL_OXIDIZED="true"   # true or false
INSTALL_GITLAB="true"     # true or false

# ============================================================================
# CERTIFICATE MODE
# ============================================================================
# Options: "selfsigned" or "existing"
# - selfsigned: Generate self-signed certificates automatically
# - existing: Use certificates from Windows CA or other external CA
CERT_MODE="selfsigned"

# Certificate settings (for both modes)
CERT_COUNTRY="CH"
CERT_STATE="Basel"
CERT_CITY="Basel"
# REMOVED: CERT_ORG - now uses ORG_NAME directly in scripts
CERT_KEY_SIZE="2048"

# ============================================================================
# SYSTEM USERS
# ============================================================================
ADMIN_USER="administrator"

# ============================================================================
# DIRECTORIES
# ============================================================================
INSTALL_DIR="/opt/docker-infrastructure"
LOG_DIR="/opt/docker-infrastructure/logs"
BACKUP_DIR="/opt/backups"

# ============================================================================
# DOCKER INSTALLATION
# ============================================================================
SKIP_DOCKER_INSTALL="false"  # Set to "true" if Docker is already installed
DOCKER_GPG_URL="https://download.docker.com/linux/ubuntu/gpg"
DOCKER_REPO_URL="https://download.docker.com/linux/ubuntu"
DOCKER_PACKAGES="docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin"

# ============================================================================
# BASE PACKAGES
# ============================================================================
BASE_PACKAGES="curl wget git openssl ca-certificates gnupg lsb-release jq htop vim ufw apt-transport-https software-properties-common"
ADDITIONAL_PACKAGES=""

# ============================================================================
# DOCKER NETWORKS
# ============================================================================
# Oxidized Network (oxinet)
DOCKER_NETWORK_OXIDIZED="oxinet"
DOCKER_BRIDGE_OXIDIZED="br-oxinet"
OXINET_SUBNET="172.16.0.0/28"
OXINET_GATEWAY="172.16.0.1"
#OXINET_OXIDIZED_IP="172.16.0.2"

# GitLab Network (gitlabnet)
DOCKER_NETWORK_GITLAB="gitlabnet"
DOCKER_BRIDGE_GITLAB="br-gitlabnet"
GITLABNET_SUBNET="172.16.0.16/28"
GITLABNET_GATEWAY="172.16.0.17"
#GITLABNET_GITLAB_IP="172.16.0.18"

# Nginx Network (nginxnet)
DOCKER_NETWORK_NGINX="nginxnet"
DOCKER_BRIDGE_NGINX="br-nginxnet"
NGINXNET_SUBNET="172.16.0.32/28"
NGINXNET_GATEWAY="172.16.0.33"
#NGINXNET_NGINX_IP="172.16.0.34"

# ============================================================================
# DOMAIN CONFIGURATION
# ============================================================================
OXIDIZED_DOMAIN="oxidized.${DOMAIN}"
GITLAB_DOMAIN="gitlab.${DOMAIN}"

# ============================================================================
# OXIDIZED CONFIGURATION
# ============================================================================
OXIDIZED_CONTAINER_NAME="oxidized"
OXIDIZED_REST_PORT="8888"
OXIDIZED_INTERVAL="300"  # CHANGED: 300 seconds (5 minutes) instead of 3600
OXIDIZED_THREADS="30"
OXIDIZED_TIMEOUT="20"
OXIDIZED_RETRIES="3"

# Oxidized Git settings
OXIDIZED_GIT_USER="Oxidized"
OXIDIZED_GIT_EMAIL="oxidized@${DOMAIN}"
OXIDIZED_GIT_REPO="/opt/oxidized/devices.git"
OXIDIZED_ROUTER_DB="/opt/oxidized/router.db"
OXIDIZED_HOOK_CMD="/opt/oxidized/git_push_hook.sh"

# Default device credentials
DEVICE_DEFAULT_USERNAME="backup"
DEVICE_DEFAULT_MODEL="panos"

# Device list (add as many as needed: DEVICE_1, DEVICE_2, etc.)
# Format: IP:MODEL:USERNAME:PASSWORD:ENABLE_PASSWORD
DEVICE_1="10.99.99.50:panos:backup:PW:"
# DEVICE_2="192.168.1.2:ios:admin:password:"
# DEVICE_3="192.168.1.3:junos:admin:password:"

# ============================================================================
# GITLAB CONFIGURATION
# ============================================================================
GITLAB_CONTAINER_NAME="gitlab-ce"
GITLAB_SSH_PORT="2222"

# GitLab Oxidized user (created automatically)
GITLAB_OXIDIZED_USER="oxidized"
GITLAB_OXIDIZED_EMAIL="oxidized@${DOMAIN}"

# GitLab project for Oxidized
GITLAB_PROJECT_NAMESPACE="oxidized"
GITLAB_PROJECT_NAME="network"
GITLAB_PROJECT_PATH="${GITLAB_PROJECT_NAMESPACE}/${GITLAB_PROJECT_NAME}"

# GitLab repository URL (for Oxidized)
GITLAB_OXIDIZED_REPO_URL="git@gitlab-ce:${GITLAB_PROJECT_PATH}.git"

# GitLab email settings
GITLAB_EMAIL_ENABLED="true"
GITLAB_EMAIL_FROM="gitlab@${DOMAIN}"
GITLAB_EMAIL_DISPLAY_NAME="GitLab ${ORG_NAME}"
GITLAB_EMAIL_REPLY_TO="noreply@${DOMAIN}"

# ============================================================================
# NGINX CONFIGURATION
# ============================================================================
NGINX_CONTAINER_NAME="nginx-proxy"
NGINX_HTTP_PORT="80"
NGINX_HTTPS_PORT="443"

# ============================================================================
# SSH KEY CONFIGURATION (for GitLab integration)
# ============================================================================
SSH_KEY_TYPE="ed25519"
SSH_KEY_BITS="4096"

# ============================================================================
# FIREWALL CONFIGURATION
# ============================================================================
UFW_ENABLED="true"
SSH_PORT="22"

# ============================================================================
# BACKUP CONFIGURATION
# ============================================================================
BACKUP_RETENTION_DAYS="30"
BACKUP_SCHEDULE="0 2 * * *"  # Daily at 2 AM (cron format)

# ============================================================================
# LOGGING
# ============================================================================
LOG_LEVEL="INFO"
LOG_MAX_SIZE="10m"
LOG_MAX_FILES="3"

# ============================================================================
# ADVANCED SETTINGS (usually don't need to change)
# ============================================================================
DOCKER_COMPOSE_VERSION="2"
TIMEZONE="Europe/Zurich"

# Container resource limits
GITLAB_MEMORY_LIMIT="4g"
OXIDIZED_MEMORY_LIMIT="512m"
NGINX_MEMORY_LIMIT="256m"

# Health check settings
HEALTHCHECK_INTERVAL="30s"
HEALTHCHECK_TIMEOUT="10s"
HEALTHCHECK_RETRIES="3"

# ============================================================================
# END OF CONFIGURATION
# ============================================================================

# Validation function (optional, for debugging)
validate_config() {
    echo "Validating configuration..."
    
    # Check required variables
    local required_vars=(
        "ORG_NAME"
        "DOMAIN"
        "ADMIN_USER"
        "DOCKER_USER"
        "DOCKER_USER_PASSWORD"
        "CERT_MODE"
    )
    
    for var in "${required_vars[@]}"; do
        if [ -z "${!var}" ]; then
            echo "ERROR: Required variable $var is not set"
            return 1
        fi
    done
    
    # Check service selection
    if [ "${INSTALL_OXIDIZED}" != "true" ] && [ "${INSTALL_GITLAB}" != "true" ]; then
        echo "ERROR: At least one service must be enabled"
        return 1
    fi
    
    # Check certificate mode
    if [ "${CERT_MODE}" != "selfsigned" ] && [ "${CERT_MODE}" != "existing" ]; then
        echo "ERROR: CERT_MODE must be 'selfsigned' or 'existing'"
        return 1
    fi
    
    echo "âœ“ Configuration is valid"
    return 0
}

# Uncomment to auto-validate when sourcing this file
# validate_config